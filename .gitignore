# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
pytestdebug.log

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# VS Code settings
.vscode/

# Editors and IDEs
.idea/
.project
.classpath
.cproject
.settings/

# Operating System Files
.DS_Store
Thumbs.db

# User-specific files
*.swp
*~

# Virtual Machine save state files
*.sav
*.vmsd
*.vmx
*.vmxf
*.vmsn

# Generated files
data/videos/
data/thumbnails/
data/transcripts/
data/exports/

# Logs
*.log

# Others
node_modules/
jspm_packages/

# Environment variables
.env.local
.env.development.local
.env.test.local
.env.production.local

# dotenv environment variables file
.env

# TernJS port file
.tern-port

# Temporary files
*.tmp
*.temp
*.swp
*.swo

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next
out/

# Nuxt.js build / generate output
.nuxt
dist/

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public/

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Lerna
lerna-debug.log

# OS generated files
ehthumbs.db
Icon?
Desktop.ini

# Python bytecode
*.py[cod]

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pytest
.pytest_cache/

# mypy
.mypy_cache/

# Coverage reports
htmlcov/
.coverage
.coverage.*

# pytype
.pytype/

# Cython
*.so
*.pyd

# Profiling data
.profiling/

# Sample data
*.sample

# Configuration files
config/settings.py
config/logging.py

# Scripts
scripts/install_dependencies.sh
scripts/run_tests.sh
scripts/start_server.sh
scripts/deploy.sh

# Docker files
Dockerfile
.dockerignore

# Documentation
README.md
LICENSE

# Others
*.bak
*.orig
*.rej
*.swp
*.swo
*.swn
*.swm
*.swl
*.class
*.sdf
*.pidb
*.suo
*.cache
*.cachefile
*.cproject
*.ccproject
*.ccscc
*.dotCover
*.ncrunch*
*.ndproj
*.njsproj
*.nupkg
*.sln.docstates
*.userprefs
*.usertasks
*.vbproj.user
*.vcxproj.user
*.vspscc
*.vssscc
*.vssscc
*.vsmdi
*.psess
*.vsp
*.vspx
*.sap

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rds

# Microsoft Fakes
FakesAssemblies/

# Node.js Packages
node_modules/
jspm_packages/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# Auto-generated JS files from Gulp
gulpfile.js
gulpfile.babel.js
gulpfile.ts
gulpfile.coffee
gulpfile.mjs

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# TypeScript incremental compilation directory
.ts-cache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next
out/

# Nuxt.js build / generate output
.nuxt
dist/

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public/

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Lerna
lerna-debug.log

# OS generated files
ehthumbs.db
Icon?
Desktop.ini

# Python bytecode
*.py[cod]

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pytest
.pytest_cache/

# mypy
.mypy_cache/

# Coverage reports
htmlcov/
.coverage
.coverage.*

# pytype
.pytype/

# Cython
*.so
*.pyd

# Profiling data
.profiling/

# Sample data
*.sample

# Configuration files
config/settings.py
config/logging.py

# Scripts
scripts/install_dependencies.sh
scripts/run_tests.sh
scripts/start_server.sh
scripts/deploy.sh

# Docker files
Dockerfile
.dockerignore

# Documentation
README.md
LICENSE

# Others
*.bak
*.orig
*.rej
*.swp
*.swo
*.swn
*.swm
*.swl
*.class
*.sdf
*.pidb
*.suo
*.cache
*.cachefile
*.cproject
*.ccproject
*.ccscc
*.dotCover
*.ncrunch*
*.ndproj
*.njsproj
*.nupkg
*.sln.docstates
*.userprefs
*.usertasks
*.vbproj.user
*.vcxproj.user
*.vspscc
*.vssscc
*.vssscc
*.vsmdi
*.psess
*.vsp
*.vspx
*.sap

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rds

# Microsoft Fakes
FakesAssemblies/

# Node.js Packages
node_modules/
jspm_packages/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# Auto-generated JS files from Gulp
gulpfile.js
gulpfile.babel.js
gulpfile.ts
gulpfile.coffee
gulpfile.mjs

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# TypeScript incremental compilation directory
.ts-cache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next
out/

# Nuxt.js build / generate output
.nuxt
dist/

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public/

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Lerna
lerna-debug.log

# OS generated files
ehthumbs.db
Icon?
Desktop.ini

# Python bytecode
*.py[cod]

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pytest
.pytest_cache/

# mypy
.mypy_cache/

# Coverage reports
htmlcov/
.coverage
.coverage.*

# pytype
.pytype/

# Cython
*.so
*.pyd

# Profiling data
.profiling/

# Sample data
*.sample

# Configuration files
config/settings.py
config/logging.py

# Scripts
scripts/install_dependencies.sh
scripts/run_tests.sh
scripts/start_server.sh
scripts/deploy.sh

# Docker files
Dockerfile
.dockerignore

# Documentation
README.md
LICENSE

# Others
*.bak
*.orig
*.rej
*.swp
*.swo
*.swn
*.swm
*.swl
*.class
*.sdf
*.pidb
*.suo
*.cache
*.cachefile
*.cproject
*.ccproject
*.ccscc
*.dotCover
*.ncrunch*
*.ndproj
*.njsproj
*.nupkg
*.sln.docstates
*.userprefs
*.usertasks
*.vbproj.user
*.vcxproj.user
*.vspscc
*.vssscc
*.vssscc
*.vsmdi
*.psess
*.vsp
*.vspx
*.sap

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rds

# Microsoft Fakes
FakesAssemblies/

# Node.js Packages
node_modules/
jspm_packages/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# Auto-generated JS files from Gulp
gulpfile.js
gulpfile.babel.js
gulpfile.ts
gulpfile.coffee
gulpfile.mjs

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# TypeScript incremental compilation directory
.ts-cache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next
out/

# Nuxt.js build / generate output
.nuxt
dist/

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public/

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Lerna
lerna-debug.log

# OS generated files
ehthumbs.db
Icon?
Desktop.ini

# Python bytecode
*.py[cod]

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pytest
.pytest_cache/

# mypy
.mypy_cache/

# Coverage reports
htmlcov/
.coverage
.coverage.*

# pytype
.pytype/

# Cython
*.so
*.pyd

# Profiling data
.profiling/

# Sample data
*.sample

# Configuration files
config/settings.py
config/logging.py

# Scripts
scripts/install_dependencies.sh
scripts/run_tests.sh
scripts/start_server.sh
scripts/deploy.sh

# Docker files
Dockerfile
.dockerignore

# Documentation
README.md
LICENSE

# Others
*.bak
*.orig
*.rej
*.swp
*.swo
*.swn
*.swm
*.swl
*.class
*.sdf
*.pidb
*.suo
*.cache
*.cachefile
*.cproject
*.ccproject
*.ccscc
*.dotCover
*.ncrunch*
*.ndproj
*.njsproj
*.nupkg
*.sln.docstates
*.userprefs
*.usertasks
*.vbproj.user
*.vcxproj.user
*.vspscc
*.vssscc
*.vssscc
*.vsmdi
*.psess
*.vsp
*.vspx
*.sap

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rds

# Microsoft Fakes
FakesAssemblies/

# Node.js Packages
node_modules/
jspm_packages/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
